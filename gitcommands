git init --> initate the local repo
git status --> to view the status commits files whether its has been added in tracking or not (Untracked files:
  		(use "git add <file>..." to include in what will be committed)
        	gitcommands)
		exmaple for tracked files :
git add --> to commit file in git, example commands : git add gitcommands --> here the gitcommands is file i have added
git status --> here the example of for the the tracked file like below
		(On branch master

		No commits yet

		Changes to be committed:
  		(use "git rm --cached <file>..." to unstage)
        	new file:   gitcommands) 
git diff --> show the difference what are changes has been made compare with the previous commit
git add . --> here dot reperesent all files have to commit
git remote -v --> show the remote repo 
git remote add "remote url" --> adding the remote repo here
git log --> git logs will show you the details of the commit
git commit -m "here your message" --> this command will be used after the git add commmand to commit a changes with a message
git branch --> this command will create a new branch
git checkout -b branchname --> this command also will use to crate a new branch {able to swith the branch after the commit in the current branch only}
git branch branchname --> to create a new branch here you have to replace branch name "branchname"
git checkout branchname --> this command will switch to the branch
git branch subbranch --> to create a subbranch
git branch --> to display the brach
git checkout subbranch --> switch the subbranch
git branch -a --> shows the local and remote branch 
git branch -m subbranch renamebranch --> rename the branch name 
git log --> 
git branch -d sourcebranchrename --> to delete the partichular branch
git checkout -b -->what ever code is there we can create branch from there.(example : git checkout -b branchname)
		What ever commit in the brach it will not refelect in other branch
git log renamebranch  --> it will show the log with commit id, 
git cherry-pick fc2377ae4dcd0a01c8b7f458cc18f363e4362a3f --> select the commit ID from the log now it will include with the master branch
 git log --oneline --> this command will show git log in a single command
example : |------------------------------------------|
root@DESKTOP-55D7P74:~/malai_education# git log --oneline
fc2377a (HEAD -> renamebranch) add the test file for testing the branch
8916401 testfor commit file subbranch
9e53718 (origin/master) added token
b197a69 upload testion to github
root@DESKTOP-55D7P74:~/malai_education#
|----------------------------------------------------------------------------|
git stash --> this command to used for help to save a file which are not commited to allow another branch to work
git stash list && git stash show --> show the stash files list
git stash -u ---> to stash the untracked files
git status drop --> If you decide you no longer need a particular stash, you can delete it with git stash drop

<<<Example>>
------------------------------------------------------------
root@DESKTOP-55D7P74:~/github_tutorial# git stash list
stash@{0}: WIP on rebase: 92d4c20 for example commit for stash
stash@{1}: WIP on rebase: 92d4c20 for example commit for stash
stash@{2}: WIP on rebase: 31673fb the test file added for check rebase function
root@DESKTOP-55D7P74:~/github_tutorial# git stash drop stash@{0}
Dropped stash@{0} (69a3dba3dcebe9c5a1e1bc97347e173c86c42cb2)
root@DESKTOP-55D7P74:~/github_tutorial# git stash list
stash@{0}: WIP on rebase: 92d4c20 for example commit for stash
stash@{1}: WIP on rebase: 31673fb the test file added for check rebase function
------------------------------------------------------------

git stash clear --> You can delete all of your stashes 

<<<Example>>>
------------------------------------------------------------
root@DESKTOP-55D7P74:~/github_tutorial# git stash  list
stash@{0}: WIP on rebase: 92d4c20 for example commit for stash
stash@{1}: WIP on rebase: 31673fb the test file added for check rebase function
root@DESKTOP-55D7P74:~/github_tutorial# git stash clear
root@DESKTOP-55D7P74:~/github_tutorial# git stash list
root@DESKTOP-55D7P74:~/github_tutorial#
------------------------------------------------------------
git commit --amend --> Change most recent Git commit message [Donâ€™t amend public commits(not practice local)]
git pull --> The git pull command is actually a combination of two other commands, git fetch followed by git merge
git rebase --> it will combain the master/orgin branch to the sub brach and the sub branch will keep on sync with master/orgin brach(it has to executed in subbranch)
git merge --> it will merge subbrach commits to the main/master/orgin branch its has to run it the master/main/orgin branch
git ls-files --> it will shows the commit file in the current branch

Have to do practice
---------------------

git reset -->
git restore -->
for changing the header postion -->
for changing the pull and push repo -->
for changing the remote repo -->
git squash -->




